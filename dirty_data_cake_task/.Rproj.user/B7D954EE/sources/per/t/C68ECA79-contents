---
title: "R Notebook"
output: html_notebook
---

Cake

Reading libraries
```{r}
library(tidyverse)
library(lubridate)
library(janitor)
```

Read data
```{r}
ingredients_code <- read_csv("cake_ingredient_code.csv")
cake_ingredients <- read_csv("cake-ingredients-1961.csv")
```

Exploring data
```{r}
head(ingredients_code)
```

Exploring main data
```{r}
head(cake_ingredients)
```

Thoughts:
Tables need to be joined somehow. I can either pivot the table, or rename manually with case_when


Pivoting the table
```{r}
cake_pivoted <- cake_ingredients %>%
  pivot_longer(2:35, names_to = "code", values_to = "quantity") %>%
  drop_na("quantity")
```

```{r}
cake_pivoted <- cake_pivoted %>%
  inner_join(ingredients_code, by = "code") %>%
  select(-code)
```

```{r}
ingredients_code
```

adding the missing values in measure, and changing the variable "cake" to lowercase
```{r}
cake_pivoted <- cake_pivoted %>%
  mutate(measure = coalesce(measure, "cup")) %>%
  clean_names()

```


.2.1 Some cleaning hints

    This data isn’t in tidy format. You’ll need to figure out how to get it into our classic data format.
    We want the actual ingredient names, not the abbreviations. You’ll find these in cake_ingredient_code.csv

1.2.2 Analysis questions

    Which cake has the most cocoa in it?
    For sponge cake, how many cups of ingredients are used in total?
    How many ingredients are measured in teaspoons?
    Which cake has the most unique ingredients?
    Which ingredients are used only once?


### Analysis

Which cake has the most cocoa in it?
```{r}
cake_pivoted %>%
  filter(ingredient == "Cocoa") %>%
  slice(1)
```

For sponge cake, how many cups of ingredients are used in total?
```{r}
# if we only count the ones that specifically say cup
cake_pivoted %>%
  filter(cake == "Sponge" & measure == "cup") %>%
  summarise(total_cups = sum(quantity))

```

How many ingredients are measured in teaspoons?
```{r}
cake_pivoted %>%
  filter(measure == "teaspoon") %>%
  distinct(ingredient) %>%
  arrange(ingredient)
```

Which cake has the most unique ingredients?
```{r}
cake_pivoted %>%
  select(cake, ingredient) %>%
  group_by(cake, ingredient) %>%
  summarise(unique_ingr_count = count(n()))
  
  
# don't know how to work around this, I never do
```

Which ingredients are used only once?
```{r}
cake_pivoted %>%
  
```

